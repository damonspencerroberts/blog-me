[{"/Users/damonroberts/Desktop/blogme/src/index.js":"1","/Users/damonroberts/Desktop/blogme/src/App.js":"2","/Users/damonroberts/Desktop/blogme/src/Containers/Home.js":"3","/Users/damonroberts/Desktop/blogme/src/Components/Posts/Posts.js":"4","/Users/damonroberts/Desktop/blogme/src/Components/Individual-Post/Post.js":"5","/Users/damonroberts/Desktop/blogme/src/Components/Logo/Logo.js":"6","/Users/damonroberts/Desktop/blogme/src/Components/Button/Button.js":"7","/Users/damonroberts/Desktop/blogme/src/Axios.js":"8","/Users/damonroberts/Desktop/blogme/src/json-data/json-data.js":"9","/Users/damonroberts/Desktop/blogme/src/Components/new-post/new-post.js":"10","/Users/damonroberts/Desktop/blogme/src/Components/New-Post/new-post.js":"11","/Users/damonroberts/Desktop/blogme/src/Components/Spinner/spinner.js":"12","/Users/damonroberts/Desktop/blogme/src/Components/Footer/footer.js":"13","/Users/damonroberts/Desktop/blogme/src/Components/Button/Small-Btn/Small-Btn.js":"14","/Users/damonroberts/Desktop/blogme/src/Components/Button/Delete-Btn/Delete.js":"15","/Users/damonroberts/Desktop/blogme/src/Components/Null-pages/np1/null-page1.js":"16"},{"size":176,"mtime":1608420392326,"results":"17","hashOfConfig":"18"},{"size":174,"mtime":1608071598420,"results":"19","hashOfConfig":"18"},{"size":4318,"mtime":1608732807223,"results":"20","hashOfConfig":"18"},{"size":3770,"mtime":1609078357519,"results":"21","hashOfConfig":"18"},{"size":1031,"mtime":1608736343224,"results":"22","hashOfConfig":"18"},{"size":522,"mtime":1608588199938,"results":"23","hashOfConfig":"18"},{"size":358,"mtime":1608588036134,"results":"24","hashOfConfig":"18"},{"size":471,"mtime":1608334133587,"results":"25","hashOfConfig":"18"},{"size":10698,"mtime":1608338567580,"results":"26","hashOfConfig":"27"},{"size":6433,"mtime":1608737142697,"results":"28","hashOfConfig":"18"},{"size":2998,"mtime":1608340694196,"results":"29","hashOfConfig":"27"},{"size":183,"mtime":1608391511923,"results":"30","hashOfConfig":"18"},{"size":254,"mtime":1608561920200,"results":"31","hashOfConfig":"18"},{"size":303,"mtime":1609076939954,"results":"32","hashOfConfig":"18"},{"size":207,"mtime":1608505539749,"results":"33","hashOfConfig":"18"},{"size":300,"mtime":1608585590986,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"kelt2d",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1dhja5y",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/damonroberts/Desktop/blogme/src/index.js",[],["70","71"],"/Users/damonroberts/Desktop/blogme/src/App.js",[],"/Users/damonroberts/Desktop/blogme/src/Containers/Home.js",[],"/Users/damonroberts/Desktop/blogme/src/Components/Posts/Posts.js",[],"/Users/damonroberts/Desktop/blogme/src/Components/Individual-Post/Post.js",[],"/Users/damonroberts/Desktop/blogme/src/Components/Logo/Logo.js",[],"/Users/damonroberts/Desktop/blogme/src/Components/Button/Button.js",[],"/Users/damonroberts/Desktop/blogme/src/Axios.js",[],"/Users/damonroberts/Desktop/blogme/src/json-data/json-data.js",[],["72","73"],"/Users/damonroberts/Desktop/blogme/src/Components/new-post/new-post.js",["74"],"/* eslint-disable react/jsx-no-target-blank */\nimport React, { useState } from 'react';\nimport classes from \"./Form.module.css\";\nimport ButtonIs from \"../Button/Button\";\nimport axios from \"../../Axios\";\nimport Spinner from \"../Spinner/spinner\";\nimport ImageUploader from \"react-images-upload\";\n\n\nconst NewPostForm = (props) => {\n    const [author, setAuthor] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [spinner, setSpinner] = useState(false);\n    const [error, setError] = useState(false);\n    const [pictures, setPictures] = useState([]);\n    const [posted, setPosted] = useState(false);\n    const [isImage, setIsImage] = useState(false);\n    const [imageLabel, setImageLabel] = useState(\"Max file size: 5mb, accepted: jpg, jpeg, png, gif\");\n\n\n    const submitForm = () => {\n        setSpinner(true);\n        const currentDate = new Date();\n        const year = currentDate.getFullYear();\n        const month = currentDate.getMonth()+1;\n        const day = currentDate.getDate();\n\n        const fullDate = `${day}/${month}/${year}`;\n\n\n        const post = {\n            title: title,\n            author: author,\n            content: content,\n            date: fullDate,\n            image: pictures,\n            isImage: isImage\n        }\n        \n        if (post.title !== \"\" && post.author !== \"\" && post.content !== \"\") {\n            axios.post('/test-blog-post.json', post)\n                .then(response => {\n                    console.log(\"Success\");\n                    props.update(true);\n                    setSpinner(false);\n                    setError(false);\n                    setPosted(true);\n                    setImageLabel(\"Max file size: 5mb, accepted: jpg, jpeg, png, gif\");\n                    setAuthor(\"\");\n                    setTitle(\"\");\n                    setContent(\"\");\n                    setPictures([]);\n                    setIsImage(false);\n                })\n                    \n                .catch(error => {\n                    alert(error);\n            });\n        } else {\n            setSpinner(false);\n            setError(true);\n        }\n        \n    }\n\n    const onDrop = picture => {\n            let reader = new FileReader();\n            let url = reader.readAsDataURL(picture[0]);\n            reader.onloadend = function (e) {\n            setPictures(reader.result);\n            setImageLabel(picture[0].name);\n            setIsImage(true);\n        };\n    };\n\n\n    return(<React.Fragment>\n            {spinner ? <Spinner /> : <div id = \"new-form\">\n                <div className = {classes.Form}>\n                    <h1>New Post</h1>\n                    {posted ? <p style = {{\n                        fontSize: \"1.2rem\",\n                        color: \"maroon\"\n                    }}>Thanks for posting! Please see your post above</p> : null}\n                    {error ? <p style = {{color: \"red\"}}>Please dont leave any fields blank!</p> : null}\n                    <form>\n                        <div>\n                        <label>Author Name</label>  \n                            <div>\n                                <input \n                                    id=\"textinput\" \n                                    name=\"textinput\" \n                                    type=\"text\" \n                                    value = {author}\n                                    onChange = {(event) => setAuthor(event.target.value)}\n                                    required\n                                />\n                            </div>\n                        </div>\n\n                        <div>\n                        <label>Blog Title</label>  \n                            <div>\n                                <input \n                                    id=\"textinput\" \n                                    name=\"textinput\" \n                                    type=\"text\" \n                                    value = {title}\n                                    onChange = {(event) => setTitle(event.target.value)}\n                                    required\n                                />\n                            </div>\n                        \n                        </div>\n                        <div>\n                            <label>Blog Content</label>\n                            <p>This text box uses markdown. Check <a target = \"_blank\" href=\"https://guides.github.com/pdfs/markdown-cheatsheet-online.pdf\">this link</a> for more information.</p>\n                            <div>                     \n                                <textarea  \n                                id=\"textarea\" \n                                name=\"textarea\"\n                                value = {content}\n                                onChange = {(event) => setContent(event.target.value)}\n                                required\n                                ></textarea>\n                            </div>\n                        </div>\n\n                        <div style = {{margin: \"10px 200px\"}}>\n                            <label>Add a photo</label>\n                            <ImageUploader\n                                {...props}\n                                withIcon={true}\n                                onChange={onDrop}\n                                imgExtension={[\".jpg\",\".jpeg\", \".gif\", \".png\", \".gif\"]}\n                                maxFileSize={5242880}\n                                fileContainerStyle = {{\n                                    backgroundColor: \"#EFC9AF\",\n                                    color: \"#104C91\"\n                                }}\n                                label = {imageLabel}\n                                singleImage = {true}\n                                labelStyles = {{\n                                    fontSize: \"1rem\"\n                                }}\n                            />\n                        </div>\n\n                        <div>\n                            <ButtonIs \n                                text = \"Post Blog\" \n                                clicked = {submitForm}\n                                color = \"#104C91\"\n                                bgcolor = \"#EFC9AF\"\n                            />\n                        </div>\n                    </form>\n                </div>\n            </div>}\n        </React.Fragment>\n    );\n}\n\nexport default NewPostForm;\n","/Users/damonroberts/Desktop/blogme/src/Components/New-Post/new-post.js",[],"/Users/damonroberts/Desktop/blogme/src/Components/Spinner/spinner.js",[],"/Users/damonroberts/Desktop/blogme/src/Components/Footer/footer.js",[],"/Users/damonroberts/Desktop/blogme/src/Components/Button/Small-Btn/Small-Btn.js",[],"/Users/damonroberts/Desktop/blogme/src/Components/Button/Delete-Btn/Delete.js",[],"/Users/damonroberts/Desktop/blogme/src/Components/Null-pages/np1/null-page1.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"75","replacedBy":"79"},{"ruleId":"77","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":69,"column":17,"nodeType":"83","messageId":"84","endLine":69,"endColumn":20},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],["85"],["86"],"no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]